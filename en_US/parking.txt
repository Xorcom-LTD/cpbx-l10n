menu.parking = Parking
module.parking = Parking
parking = Parking
parking.both = Both
parking.callee = Callee
parking.caller = Caller
parking.comebackdialtime = Dial Time to Originator
parking.comebackdialtime.placeholder = Value in seconds
parking.comebackdialtime.tooltip = When a parked call times out, this is the number of seconds to dial the device that originally parked the call.
parking.comebackdialtime.invalid = Comeback Dial Time must be at least {0} seconds.
parking.comebacktoorigin = Return to Originator
parking.comebacktoorigin.tooltip = Configures the behavior of call parking when the parked call times out. If set to no it will go to the destination defined for this parking
parking.defpark = The default parking lot cannot be deleted.
parking.description = Description
parking.description.tooltip = Short description to identify this parking.
parking.description.invalid = Description is required and must be unique.
parking.dest = Destination
parking.extension = Code
parking.extension.invalid = The parking lot code must be a number and must not be in use by another module.
parking.extension.tooltip = Number to reach this service.
parking.findslot = Find Slot
parking.findslot.first = First
parking.findslot.first.tooltip = Use the lowest numbered parking space available
parking.findslot.next = Next
parking.findslot.next.tooltip = Use the next parking space from the most recently used one.
parking.findslot.tooltip = Sets the method for selecting parking spaces when a call is parked.
parking.general = General
parking.mod_dest = Destination Module
parking.music_group_id = Music on Hold
parking.music_group_id.tooltip = The Music on Hold class to use for the parked channel.
parking.none = None
parking.no = No
parking.no_one = No One
parking.parkedcallhangup = Call Hangup
parking.parkedcallhangup.tooltip = Specify who can execute a DTMF-based hangup in the call when picking up a parked call.
parking.parkedcallreparking = Call Reparking
parking.parkedcallreparking.tooltip = Specify who can execute a DTMF-based park in the call when picking up a parked call.
parking.parkedcalltransfers = Call Transfer
parking.parkedcalltransfers.tooltip = Specify who can execute a DTMF-based transfer in the call when picking up a parked call.
parking.parkedplay = Courtesy Tone
parking.parkedplay.tooltip = Who to play courtesy tone to when picking up a parked call.
parking.parkingtime = Parking Time
parking.parkingtime.placeholder = Value in seconds
parking.parkingtime.tooltip = Number of seconds a call can be parked before returning.
parking.parkingtime.invalid = Parking Time must be at least {0} seconds.
parking.parkpos = Parking Positions
parking.parkpos.tooltip = Range of parking spaces to use.
parking.parkpos.invalid = Parking Positions must be a number greater than {0} and the range of numbers used by this parking lot must not be in use by another module.
parking.timeout_destination = Timeout Destination
parking.use_as_default = Use as Default
parking.use_as_default.tooltip = Mark this parking lot to be the systemwide default.
destination_type.parking_lot = Parking Lot
parking.returncallprefix = Return Call Prefix
parking.returncallprefix.tooltip = Prefix to prepend to CID Name. Can be used to indicate to the originator which parking lot the call comes from
parking.returncallprefix.invalid = Return Call Prefix is invalid. Only underscore, dash and alphanumeric values are allowed
parking.parkedplay.invalid = Courtesy tone must be one of "no", "caller", "callee", "both".
parking.parkedcalltransfers.invalid = Call transfer must be one of "no", "caller", "callee", "both".
parking.parkedcallreparking.invalid = Call reparking must be one of "no", "caller", "callee", "both".
parking.parkedcallhangup.invalid = Call hangup must be one of "no", "caller", "callee", "both".
parking.findslot.invalid = Find slot must be one of "first", "next".
parking.destination_id.invalid = Destination must be valid or empty.
