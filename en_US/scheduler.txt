menu.scheduler = Task Manager
module.scheduler = Task Manager
scheduler.tasks = Tasks
scheduler.information = Information
scheduler.script = Script
scheduler.script.tooltip = Which script this task should execute at the scheduled time and date.
scheduler.script.invalid = A valid script must be selected.
scheduler.description = Description
scheduler.description.tooltip = Description for this scheduled task.
scheduler.description.invalid = No description provided.
scheduler.schedule = Schedule
scheduler.create_task = Create Task
scheduler.task_created = Task has been created
scheduler.edit_task = Edit Task
scheduler.task_updated = Task has been updated
scheduler.starting = Starting
scheduler.starting.tooltip = The date and time at this task should execute the selected script.
scheduler.starting.invalid = No start time and date chosen or formatted improperly.
scheduler.completed = Completed
scheduler.completed.format =
	[] Never
	*[one] {0,datetime}
scheduler.every = Every
scheduler.every.tooltip = Execute the selected task at a specific interval. Leave blank to execute the selected task once.
scheduler.interval.invalid = Execution interval must be a positive number or left empty.
scheduler.interval_unit.invalid = Execution interval must be in minutes, hours, days, weeks or months.
scheduler.once = Once
scheduler.every.minute =
	[0] On {1,datetime}
	[one] Every minute, starting {1,datetime}
	*[other] Every {0} minutes, starting {1,datetime}
scheduler.every.hour =
	[0] On {1,datetime}
	[one] Every hour, starting {1,datetime}
	*[other] Every {0} hours, starting {1,datetime}
scheduler.every.day =
	[0] On {1,datetime}
	[one] Every day, starting {1,datetime}
	*[other] Every {0} days, starting {1,datetime}
scheduler.every.week =
	[0] On {1,datetime}
	[one] Every week, starting {1,datetime}
	*[other] Every {0} weeks, starting {1,datetime}
scheduler.every.month =
	[0] On {1,datetime}
	[one] Every month, starting {1,datetime}
	*[other] Every {0} months, starting {1,datetime}
scheduler.minutes = Minutes
scheduler.hours = Hours
scheduler.days = Days
scheduler.weeks = Weeks
scheduler.months = Months
scheduler.parameters = Parameters
scheduler.parameters.tooltip = Any parameters required by the selected script.
scheduler.notes = Notes
scheduler.notes.tooltip = Any notes regarding this task.
scheduler.no_script_description = No information available.
scheduler.confirm_delete = Are you sure you wish to delete this task?
scheduler.task_deleted = Task has been deleted
scheduler.task.script.tooltip = Script to be executed
scheduler.task.description.tooltip = Description of the task
scheduler.task.schedule.tooltip = When to execute the task
scheduler.task.completed.tooltip = Last execution date
scheduler.task.state.tooltip = Current state
scheduler.state = State
scheduler.enabled = Enabled
scheduler.disabled = Disabled
scheduler.run_now = Execute this task now
scheduler.task_started = Task has been started
scheduler.scripts.pbx_hd_clean = Free disk space
scheduler.scripts.pbx_hd_clean.description = <p>usage: pbx_hd_clean [-h] [-t THRESHOLD] [-T THRESHOLD_TARGET] [-a ASTLOGS_RATE] [-b BACKUPS_RATE] [-r RECORDINGS_RATE] [-l LOG_MAX_SIZE] [-n BACKUPS_NUM] [--modules MODULES] [-v] [-d] [-s] [--list] [--html-usage] [--html-usage-raw]</p><p>This script ensures that there is minimal sufficient free hard disk space for proper PBX behavior. It checks the available disk space and if it is lower than configurable threshold value then the script will free disk space by deleting files on the main partition.</p><p> The script checks the proportion (rate) of disk space taken by different classes of files: call recordings, log files, backups etc and then deletes the oldest files accordingly.</p><p> It will only attempt at cleaning if the disk usage in the main partition is above the threshold (by default: 0.95). It will generally attempt cleaning up files until it goes below the target threshold (by default: 0.9).</p></ul><p>optional arguments</p><ul><li> -h, --help show this help message and exit</li><li> -t THRESHOLD, --threshold THRESHOLD Rate of used space at which we start cleaning. Default: 0.95.</li><li> -T THRESHOLD_TARGET, --threshold-target THRESHOLD_TARGET Rate of used space at which we stop cleaning. Default: 0.9.</li><li> -a ASTLOGS_RATE, --astlogs-rate ASTLOGS_RATE Maximal part of free disk space used for Asterisk logs. Default: 0.05</li><li> -b BACKUPS_RATE, --backups-rate BACKUPS_RATE Maximal part of free disk space used for backups. Default: 0.2</li><li> -r RECORDINGS_RATE, --recordings-rate RECORDINGS_RATE Maximal part of free disk space used for recordings. Default: 0.5</li><li> -l LOG_MAX_SIZE, --log-max-size LOG_MAX_SIZE Size (MB) beyond which log file may be deleted. Default: 10 (MB)</li><li> -n BACKUPS_NUM, --backups-num BACKUPS_NUM Number of backups to always avoid delete. Default: 2</li><li> --modules MODULES Comma-separates list of cleaner modules. Default: (all modules)</li><li> -v, --verbose Be verbose</li><li> -e, --no-email Do not send email notification</li></ul><p>For Interactive Use</p><ul><li> -d, --no-act Do nothing. Just print what is to be run</li><li> -s, --status Do nothing. Just show status</li><li> --list Do nothing. Just list cleaner modules</li><li> --html-usage Do nothing. Format help as HTML (a single line)</li><li> --html-usage-raw If html-usage: don't squash HTML to a single line</li></ul><p>Defaults should work fine. The defaults are set to be safe for systems with smaller disks. On larger ones the sum of the three rates (astlogs, backups and recordings) can be much closer to 1. For example: --backups-rate 0.7 . If your backups include recordings, change their rates accordingly. For example: -b 0.5 -r 0.2 .</p><p> You can also run the script manually in the shell command line: /usr/share/ombutel/task-scripts/pbx_hd_clean</p>
scheduler.scripts.backup = Automatic Backup
scheduler.scripts.backup.description = This script will backup system data and configuration based on the below parameters.<br/><br/><u>IMPORTANT NOTE:</u> the number of backups kept in the system are defined per <b>type</b>. In case more than one backup task is defined <b>a unique type must be set for each backup task</b>.</br><p>Parameters:</p><ul><li><b>-all</b><t/> - Full backup. Same as: -rec -vm -fax -cdr</li><li><b>-n</b> - Include backup name</li><li><b>-c</b> - Include free text comment</li><li><b>-rec</b> - Backup recordings</li><li><b>-vm</b> - Backup voicemails</li><li><b>-fax</b> - Backup faxes</li><li><b>-cdr</b> - Backup CDRs</li><li><b>-k</b> - Keep the latest N backups. For example: to keep 2 latest backups use <b>-k 2</b> </li><li><b>-type</b> -Group backups. In case <b>-k</b> options is specified. </br>This will be used to keep only the last N backups of the same type</li><li><b>-d</b> - Write backup to specific folder with automatic filename.</li><li><b>-r</b> - Write backup to external storage provider with specified name.</li></ul><p>Optionally, a filename can be specified to backup to.</p><p>Example: <b>-n my_backup -vm -cdr -k 3 -type weekly /tmp/mybackup.tar</b><br/>This will create a backup named <b>my_backup</b> with only voicemails and CDRs and always keep the latest 3 backups of this type. The backup will be written to /tmp/mybackup.tar</p>
scheduler.scripts.recfile_rename = Rename recording files
scheduler.scripts.recfile_rename.description = <p>This script renames the recording files and the respective filenames in the CDR table to the following format: </p><p>FileName: [direction]_[source]_[destination]_[date_time]_[duration]_[id]</p><p style="overflow-wrap: break-word;">INCOMING_9039041771_2979_2016-04-11T09-52-58_4_1511691053.77.wav.</p><p style="overflow-wrap: break-word;">OUTGOING_0523992414_2992_2016-04-11T08-55-19_4_1511691053.77.wav</p><p>Usage: recfile_rename [-f FROM_DATE] [-t TO_DATE] [-v] [-d] </p><p>Optional arguments</p><ul><li> -f FROM_DATE, --from_date FROM_DATE Date from which the recording filenames will be renamed. Date format must be YYYY-MM-DD.</li><li> -t TO_DATE, --to_date TO_DATE Date up until which recording filenames will be renamed. Date format must be YYYY-MM-DD.</li><li> -v, --verbose Be verbose.</li><li> -d, --dry-run Do nothing, just print what would be done.</li></ul></p><p>You can also run the script manually in the shell command line: /usr/share/ombutel/task-scripts/recfile_rename</p>
scheduler.scripts.prune_cdr = Delete CDR Records
scheduler.scripts.prune_cdr.description = <p>Usage: prune_cdr [-d] [-D] --[hours/days/weeks/months/years/num] N<br/>Delete CDR records older than given time period:<br/>--hours     Delete records older than N hours.<br/>--days      Delete records older than N days.<br/>--weeks     Delete records older than N weeks.<br/>--months    Delete records older than N months.<br/>--years     Delete records older than N years.<br/>--num       Delete all but the last N records.<br/>-d       Also delete Local audio recordings.<br/>-D       Also delete External Storage audio recordings.</p>
scheduler.scripts.prune_cel = Delete CEL Records
scheduler.scripts.prune_cel.description = <p>Usage: prune_cel --[hours/days/weeks/months/years/num] N<br/>Delete CEL records older than given time period:<br/>--hours     Delete records older than N hours.<br/>--days      Delete records older than N days.<br/>--weeks     Delete records older than N weeks.<br/>--months    Delete records older than N months.<br/>--years     Delete records older than N years.<br/>--num       Delete all but the last N records.</p>
scheduler.randomize = Randomize
scheduler.randomize.tooltip = Randomize the start time of this task by up to 50% of the interval with a maximum of Â± 30 minutes.
scheduler.scripts.prune_pms = Delete PMS Records
scheduler.scripts.prune_pms.description = <p>Usage: prune_pms --[hours/days/weeks/months/years/num] N<br/>Delete PMS records older than given time period:<br/>--hours     Delete records older than N hours.<br/>--days      Delete records older than N days.<br/>--weeks     Delete records older than N weeks.<br/>--months    Delete records older than N months.<br/>--years  Delete records older than N years.<br/>--num       Delete all but the last N records.</p>
scheduler.scripts.upload_recordings = Upload Recordings
scheduler.scripts.upload_recordings.description = Uploads recordings to an external storage provider.<br/><br/><p>Usage: upload_recordings [-dir value] [-prefix value] [-res value] [-n value] [-existing] [-delete]<br/>-dir         Directory containing recordings to be uploaded (default "/var/spool/asterisk/cpbx-upload-rec").<br/>-existing    Stage existing recordings for upload.<br/>-delete      Delete local file after successful upload.<br/>-n           Number of uploads to perform in parallel (default 5).<br/>-prefix      Object name prefix for uploaded recordings (default "/recordings").<br/>-res         Name of external resource to upload to (default "").<br/></p>
